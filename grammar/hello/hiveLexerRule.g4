lexer grammar hiveLexerRule;

@lexer::members {
  /**
   * When false, INTERSECT is given the greater precedence over the other set
   * operations (UNION, EXCEPT and MINUS) as per the SQL standard.
   */
  helloLexer.prototype.legacy_setops_precedence_enbled = false;

  /**
   * 让我们来看一看这个是不是一个合法的小数
   */
  helloLexer.prototype.isValidDecimal=function() {
    var nextChar = this._input.LA(1);
    if (nextChar >= 'A' && nextChar <= 'Z' || nextChar >= '0' && nextChar <= '9' ||
      nextChar == '_') {
      return false;
    } else {
      return true;
    }
  }
}

fragment DIGIT:[0-9];

fragment LETTER: [A-Z];

fragment EXPONENT: 'E' [+-]? DIGIT+;

// 小数
fragment DECIMAL_DIGITS: DIGIT+ '.' DIGIT* | '.' DIGIT+;

ALL: 'ALL';

ALTER: 'ALTER';

AND: 'AND';

ARRAY: 'ARRAY';

AS: 'AS';

AUTHORIZATION: 'AUTHORIZATION';

BETWEEN: 'BETWEEN';

BIGINT: 'BIGINT';

BINARY: 'BINARY';

BOOLEAN: 'BOOLEAN';

BOTH: 'BOTH';

BY: 'BY';

CASE: 'CASE';

CAST: 'CAST';

CHAR: 'CHAR';

COLUMN: 'COLUMN';

CONF: 'CONF';

CREATE: 'CREATE';

CROSS: 'CROSS';

CUBE: 'CUBE';

CURRENT: 'CURRENT';

CURRENT_DATE: 'CURRENT_DATE';

CURRENT_TIMESTAMP: 'CURRENT_TIMESTAMP';

CURSOR: 'CURSOR';

DATABASE: 'DATABASE';

DATE: 'DATE';

DECIMAL: 'DECIMAL';

DELETE: 'DELETE';

DESCRIBE: 'DESCRIBE';

DISTINCT: 'DISTINCT';

DOUBLE: 'DOUBLE';

DROP: 'DROP';

ELSE: 'ELSE';

END: 'END';

EXCHANGE: 'EXCHANGE';

EXISTS: 'EXISTS';

EXTENDED: 'EXTENDED';

EXTERNAL: 'EXTERNAL';

FALSE: 'FALSE';

FETCH: 'FETCH';

FLOAT: 'FLOAT';

FOLLOWING: 'FOLLOWING';

FOR: 'FOR';

FROM: 'FROM';

FULL: 'FULL';

FUNCTION: 'FUNCTION';

GRANT: 'GRANT';

GROUP: 'GROUP';

GROUPING: 'GROUPING';

HAVING: 'HAVING';

IF: 'IF';

IMPORT: 'IMPORT';

IN: 'IN';

INNER: 'INNER';

INSERT: 'INSERT';

INT: 'INT';

INTERSECT: 'INTERSECT';

INTERVAL: 'INTERVAL';

INTO: 'INTO';

IS: 'IS';

JOIN: 'JOIN';

LATERAL: 'LATERAL';

LEFT: 'LEFT';

LESS: 'LESS';

LIKE: 'LIKE';

LOCAL: 'LOCAL';

MACRO: 'MACRO';

MAP: 'MAP';

MORE1: 'MORE';

NONE: 'NONE';

NOT: 'NOT';

NULL: 'NULL';

OF: 'OF';

ON: 'ON';

OR: 'OR';

ORDER: 'ORDER';

OUT: 'OUT';

OUTER: 'OUTER';

OVER: 'OVER';

PARTIALSCAN: 'PARTIALSCAN';

PARTITION: 'PARTITION';

PERCENT: 'PERCENT';

PRECEDING: 'PRECEDING';

PRESERVE: 'PRESERVE';

PROCEDURE: 'PROCEDURE';

RANGE: 'RANGE';

READS: 'READS';

REDUCE: 'REDUCE';

REVOKE: 'REVOKE';

RIGHT: 'RIGHT';

ROLLUP: 'ROLLUP';

ROW: 'ROW';

ROWS: 'ROWS';

SELECT: 'SELECT';

SET: 'SET';

SMALLINT: 'SMALLINT';

TABLE: 'TABLE';

TABLESAMPLE: 'TABLESAMPLE';

THEN: 'THEN';

TIMESTAMP: 'TIMESTAMP';

TO: 'TO';

TRANSFORM: 'TRANSFORM';

TRIGGER: 'TRIGGER';

TRUE: 'TRUE';

TRUNCATE: 'TRUNCATE';

UNBOUNDED: 'UNBOUNDED';

UNION: 'UNION';

UNIQUEJOIN: 'UNIQUEJOIN';

UPDATE: 'UPDATE';

USER: 'USER';

USING: 'USING';

UTC_TMESTAMP: 'UTC_TMESTAMP';

VALUES: 'VALUES';

VARCHAR: 'VARCHAR';

WHEN: 'WHEN';

WHERE: 'WHERE';

WINDOW: 'WINDOW';

WITH: 'WITH';

COMMIT: 'COMMIT';

ONLY: 'ONLY';

REGEXP: 'REGEXP';

RLIKE: 'RLIKE';

ROLLBACK: 'ROLLBACK';

START: 'START';

CACHE: 'CACHE';

CONSTRAINT: 'CONSTRAINT';

FOREIGN: 'FOREIGN';

PRIMARY: 'PRIMARY';

REFERENCES: 'REFERENCES';

DAYOFWEEK: 'DAYOFWEEK';

EXTRACT: 'EXTRACT';

FLOOR: 'FLOOR';

INTEGER: 'INTEGER';

PRECISION: 'PRECISION';

VIEWS: 'VIEWS';

TIME: 'TIME';

NUMERIC: 'NUMERIC';

SYNC: 'SYNC';

SHOW: 'SHOW';

DATABASES: 'DATABASES';

SCHEMAS: 'SCHEMAS';

TABLES: 'TABLES';

ADD: 'ADD';

ADMIN: 'ADMIN';

AFTER: 'AFTER';

ANALYZE: 'ANALYZE';

ARCHIVE: 'ARCHIVE';

ASC: 'ASC';

BEFORE: 'BEFORE';

BUCKET: 'BUCKET';

BUCKETS: 'BUCKETS';

CASCADE: 'CASCADE';

CHANGE: 'CHANGE';

CLUSTER: 'CLUSTER';

CLUSTERED: 'CLUSTERED';

CLUSTERSTATUS: 'CLUSTERSTATUS';

COLLECTION: 'COLLECTION';

COLUMNS: 'COLUMNS';

COMMENT: 'COMMENT';

COMPACT: 'COMPACT';

COMPACTIONS: 'COMPACTIONS';

COMPUTE: 'COMPUTE';

CONCATENATE: 'CONCATENATE';

CONTINUE: 'CONTINUE';

DATA: 'DATA';

DATETIME: 'DATETIME';

DAY: 'DAY';

DBPROPERTIES: 'DBPROPERTIES';

DEFERRED: 'DEFERRED';

DEFINED: 'DEFINED';

DELIMITED: 'DELIMITED';

DEPENDENCY: 'DEPENDENCY';

DESC: 'DESC';

DIRECTORIES: 'DIRECTORIES';

DIRECTORY: 'DIRECTORY';

DISABLE: 'DISABLE';

DISTRIBUTE: 'DISTRIBUTE';

ELEM_TYPE: 'ELEM_TYPE';

ENABLE: 'ENABLE';

ESCAPED: 'ESCAPED';

EXCLUSIVE: 'EXCLUSIVE';

EXPLAIN: 'EXPLAIN';

EXPORT: 'EXPORT';

FIELDS: 'FIELDS';

FILE: 'FILE';

FILEFORMAT: 'FILEFORMAT';

FIRST: 'FIRST';

FORMAT: 'FORMAT';

FORMATTED: 'FORMATTED';

FUNCTIONS: 'FUNCTIONS';

HOLD_DDLTIME: 'HOLD_DDLTIME';

HOUR: 'HOUR';

IDXPROPERTIES: 'IDXPROPERTIES';

IGNORE: 'IGNORE';

INDEX: 'INDEX';

INDEXES: 'INDEXES';

INPATH: 'INPATH';

INPUTDRIVER: 'INPUTDRIVER';

INPUTFORMAT: 'INPUTFORMAT';

ITEMS: 'ITEMS';

JAR: 'JAR';

KEYS: 'KEYS';

KEY_TYPE: 'KEY_TYPE';

LIMIT: 'LIMIT';

LINES: 'LINES';

LOAD: 'LOAD';

LOCATION: 'LOCATION';

LOCK: 'LOCK';

LOCKS: 'LOCKS';

LOGICAL: 'LOGICAL';

LONG: 'LONG';

MAPJOIN: 'MAPJOIN';

MATERIALIZED: 'MATERIALIZED';

METADATA: 'METADATA';

SETMINUS: 'MINUS';

MINUTE: 'MINUTE';

MONTH: 'MONTH';

MSCK: 'MSCK';

NOSCAN: 'NOSCAN';

NO_DROP: 'NO_DROP';

OFFLINE: 'OFFLINE';

OPTION: 'OPTION';

OUTPUTDRIVER: 'OUTPUTDRIVER';

OUTPUTFORMAT: 'OUTPUTFORMAT';

OVERWRITE: 'OVERWRITE';

OWNER: 'OWNER';

PARTITIONED: 'PARTITIONED';

PARTITIONS: 'PARTITIONS';

SETPLUS: 'PLUS';

PRETTY: 'PRETTY';

PRINCIPALS: 'PRINCIPALS';

PROTECTION: 'PROTECTION';

PURGE: 'PURGE';

READ: 'READ';

READONLY: 'READONLY';

REBUILD: 'REBUILD';

RECORDREADER: 'RECORDREADER';

RECORDWRITER: 'RECORDWRITER';

RELOAD: 'RELOAD';

RENAME: 'RENAME';

REPAIR: 'REPAIR';

REPLACE: 'REPLACE';

REPLICATION: 'REPLICATION';

RESTRICT: 'RESTRICT';

REWRITE: 'REWRITE';

ROLE: 'ROLE';

ROLES: 'ROLES';

SCHEMA: 'SCHEMA';

SECOND: 'SECOND';

SEMI: 'SEMI';

SERDE: 'SERDE';

SERDEPROPERTIES: 'SERDEPROPERTIES';

SERVER: 'SERVER';

SETS: 'SETS';

SHARED: 'SHARED';

SHOW_DATABASE: 'SHOW_DATABASE';

SKEWED: 'SKEWED';

SORT: 'SORT';

SORTED: 'SORTED';

SSL: 'SSL';

STATISTICS: 'STATISTICS';

STORED: 'STORED';

STREAMTABLE: 'STREAMTABLE';

STRUCT: 'STRUCT';

TBLPROPERTIES: 'TBLPROPERTIES';

TEMPORARY: 'TEMPORARY';

TERMINATED: 'TERMINATED';

TINYINT: 'TINYINT';

TOUCH: 'TOUCH';

TRANSACTIONS: 'TRANSACTIONS';

UNARCHIVE: 'UNARCHIVE';

UNDO: 'UNDO';

UNIONTYPE: 'UNIONTYPE';

UNLOCK: 'UNLOCK';

UNSET: 'UNSET';

UNSIGNED: 'UNSIGNED';

URI: 'URI';

USE: 'USE';

UTC: 'UTC';

UTCTIMESTAMP: 'UTCTIMESTAMP';

VALUE_TYPE: 'VALUE_TYPE';

VIEW: 'VIEW';

WHILE: 'WHILE';

YEAR: 'YEAR';

AUTOCOMMIT: 'AUTOCOMMIT';

ISOLATION: 'ISOLATION';

LEVEL: 'LEVEL';

OFFSET: 'OFFSET';

SNAPSHOT: 'SNAPSHOT';

TRANSACTION: 'TRANSACTION';

WORK: 'WORK';

WRITE: 'WRITE';

ABORT: 'ABORT';

KEY: 'KEY';

LAST: 'LAST';

NORELY: 'NORELY';

NOVALIDATE: 'NOVALIDATE';

NULLS: 'NULLS';

RELY: 'RELY';

VALIDATE: 'VALIDATE';

DETAIL: 'DETAIL';

DOW: 'DOW';

EXPRESSION: 'EXPRESSION';

OPERATOR: 'OPERATOR';

QUARTER: 'QUARTER';

SUMMARY: 'SUMMARY';

VECTORIZATION: 'VECTORIZATION';

WEEK: 'WEEK';

YEARS: 'YEARS';

MONTHS: 'MONTHS';

WEEKS: 'WEEKS';

DAYS: 'DAYS';

HOURS: 'HOURS';

MINUTES: 'MINUTES';

SECONDS: 'SECONDS';

TIMESTAMPTZ: 'TIMESTAMPTZ';

ZONE: 'ZONE';

EQ: '=' | '==';

PLUS: '+';

MINUS: '-';

// 带引号的字符串
STRING:
	'\'' (~('\'' | '\\') | ('\\' .))* '\''
	| '"' ( ~('"' | '\\') | ('\\' .))* '"';

VARIABLE_REFERENCE: '$' '{' (~('{' | '}'))* '}';

// 整数
INTEGER_VALUE: DIGIT+;

IDENTIFIER: (LETTER | DIGIT | '_')+;

BIGINT_LITERAL: DIGIT+ 'L';

SMALLINT_LITERAL: DIGIT+ 'S';

TINYINT_LITERAL: DIGIT+ 'Y';

// 999e1 999e+1 10.1e+1 .1e+1 小数，指数类型
DECIMAL_VALUE:
	DIGIT+ EXPONENT
	| DECIMAL_DIGITS EXPONENT? {this.isValidDecimal()}?;

DOUBLE_LITERAL:
	DIGIT+ EXPONENT? 'D'
	| DECIMAL_DIGITS EXPONENT? 'D' {this.isValidDecimal()}?;

BIGDECIMAL_LITERAL:
	DIGIT+ EXPONENT? 'BD'
	| DECIMAL_DIGITS EXPONENT? 'BD' {this.isValidDecimal()}?;

BACKQUOTED_IDENTIFIER: '`' ( ~'`' | '``')* '`';

// 空格
WS: [ \t\r\n]+ -> channel(HIDDEN);
